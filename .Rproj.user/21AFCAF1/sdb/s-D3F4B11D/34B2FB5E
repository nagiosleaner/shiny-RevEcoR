{
    "collab_server" : "",
    "contents" : "# share sidebar -----------------------------------------------------------\n\nshared_sidebar <- function(){\n  column(width = 3, \n    wellPanel(\n      img(src = \"images/logo.png\"),\n      tags$head(tags$style(\n        type=\"text/css\",\n        \"img {max-width: 100%; width: 100%; height: auto}\"\n      ))\n    ),\n    wellPanel(\n      helpText(HTML(\"<b>VERSION CONTROL</b>\")),\n      HTML('Version 0.1.1'),\n      HTML('<br>'),\n      HTML('Updated on 21-Mar-2016'),\n      HTML('<br>'),\n      HTML('<a href=\"https://github.com/yiluheihei/shiny-RevEcoR\" \n        target=\"_blank\">Code on GitHub</a>')\n      ),\n    wellPanel(\n      tags$p(\"Yang Cao\"),\n      tags$p(\"Beijing Institute of Radiation Medicine\"),\n      tags$p(\"Department of Biotechnology\"),\n      tags$p(\"Email:\", tags$a(href=\"mailto:yiluheihei@gmail.com\",\n        \"yiluheihei@gmail.com\"))\n    ),\n    wellPanel(\n      helpText(HTML(\"<b>OTHER Links</b>\")),\n      HTML('<a href=\"https://github.com/yiluheihei/RevEcoR\" target=\"_blank\"\n        >RevEcoR Package</a>,'),\n      HTML('<a href=\"https://github.com/yiluheihei\" \n        target=\"_blank\">Github Page</a>.')\n      )\n    )\n}\n\nhelppage = function(doc){\n  fluidPage(width =12, tabPanel('',includeMarkdown(doc)))\n}\n\n# net layout --------------------------------------------------------------\n\navailable_layouts_net = list(\n  circle = 'circle',\n  eigen = 'eigen',\n  fruchtermanreingold = 'fruchterman.reingold',\n  hall = 'hall',\n  kamadakawai = 'kamada.kawai',\n  mds = 'mds',\n  princoord = 'princoord',\n  random = 'random',\n  spring = 'spring',\n  target = 'target'\n)\n\n## network format for saving \nvector_graphicformats = c(\"eps\", \"pdf\", \"tex\", \"svg\")\nraster_graphicformats = c(\"bmp\", \"jpg\", \"png\", \"tiff\")\ngraphic_formats = c(vector_graphicformats, raster_graphicformats)\n\n# introduction page -------------------------------------------------------\n\nintropage = fluidPage(\n  shared_sidebar(),\n  column(width = 9,\n    ##h4(\"Introduction to shiny-RevEcoR\"),\n    tabPanel(\"introduction\",includeMarkdown(\"docs/introduction.md\"))\n  )\n)\n\n\n# Data PAGE ---------------------------------------------------------------\n\ndatapage = fluidPage(\n  column(width = 3,\n    wellPanel(\n      img(src = \"images/logo.png\"),\n      tags$head(tags$style(\n        type=\"text/css\",\n        \"img {max-width: 100%; width: 100%; height: auto}\"\n      ))\n    ),\n    wellPanel(\n      ##helpText('In shiny-RevEcoR, a build-in sample metabolic data have been loaded.'),\n      ##helpText(\"Download sample annotated metabolic data\"),\n      checkboxInput(inputId = \"sampledata\",\n        label = \"Load sample data\",value = FALSE),\n      downloadButton(\"downloadData\", \"Download\")\n    ),\n    wellPanel(\n      ##helpText(\"Users can upload their own species' metabolic data\"),\n      helpText(\"Upload tab-seprated file\"),\n      fileInput('uploadfile',label = '', accept=c('text/tab', \n        'text/tab-separated-values,text/plain', '.tab'))\n    ),\n    wellPanel(\n      helpText(\"Download KEGG reference metabolic data\"),\n      downloadButton(\"downloadRefData\", \"Download\")\n    )\n  ),\n  \n  column(width = 9,\n    helpText(\"In shiny-RevEcoR, a build-in sample metabolic data have been loaded.\n      And shiny-RevEcoR begins with the KO annotation functional data uploading. \n      User can upload local KO annotated profile of genomes that are in the “tab \n      tab-separated” file format.The first row of shiny-RevEcoR's input data \n      represents the species name. For the specific input data format, users can\n      also download the sample metabolic data in the sidebar panel of this page, \n      and your own input data must be in the same format as the sample data.\"),\n    helpText(\"Note the initial input of shiny-ReEvEcoR must be functional data\n      which have been annotated with KEGG database, that is the uploaded data \n      have been annotated with the KEGG orthology (KO).\"),\n    helpText(\"Once species' functional annotation data is uploaded, subsequently \n      users could reconsruct the metabolic network of selected species based on\n      KEGG database in the next Network page.\"),\n    tags$b('The KO number that each species mapped is as following, and first row \n      of data is the name of species'),\n    shiny::dataTableOutput('species_ko_no')\n    ##textOutput('species_name')\n    ##tags$style(\n      ##\"#species_no{font-size: 20px;font-weight: bold;}\",\n      ##\"#species_name{font-size: 20px;}\"\n    ##)\n    ##)\n  )\n)\n\n# netpage -----------------------------------------------------------------\n\nnetpage = fluidPage(\n  tags$link(rel = 'stylesheet', type = 'text/css', href = 'style.css'),\n  column(width = 3,\n    wellPanel(\n      img(src = \"images/logo.png\"),\n      tags$head(tags$style(\n        type=\"text/css\",\n        \"img {max-width: 100%; width: 100%; height: auto}\"\n      ))\n    ),\n    wellPanel(\n      ##helpText(\"The select input widget determines which speices network will be \n      ##reconstucted and visualized in the right panel, as well as in the next\n      ##\", tags$i(\"Seed set\"),'page.'),\n      h5('Network Structure'),\n      helpText('Which species to analysis..'),\n      uiOutput(\"species_select\"),\n      selectInput(\"network_layout\", \"Layout\",\n        choices = names(available_layouts_net),\n        selected = \"fruchtermanreingold\"\n      ),\n      fluidRow(column(width=12,\n        div(class = 'col-md-6',numericInputRow(\"confidence_score\",\n          \"Confidence\",min =0, max =1, value=0,step=0.1, class = 'col-md-12')),\n        div(class = 'col-md-6',textInputRow(\"seed_color\",\"Seed color\",\n          \"red\", class = 'col-md-12'))\n      )),\n      checkboxInput(inputId = \"gaint_component\",label =\"Ignore all nodes except \n        those in the giant component?\",value = TRUE),\n      checkboxInput(inputId = \"small_component\",\n        label = \"Ignore small component?\",value = TRUE),\n      helpText('The number of nodes of small component to ignore.'),\n      numericInput(inputId = \"small_threshold\",label=\"Threshold\", \n        min = 0,  value = 0, step = 5)\n    ),\n    wellPanel(\n      h5(\"Aesthetic Mapping\"),\n      fluidRow(column(width=12,\n        div(class=\"col-md-6\",\n          numericInputRow(inputId = \"node_size\",\"vertex size\", \n            min = 0, max = 20, value = 3, step = 1,class=\"col-md-12\")),\n        div(class=\"col-md-6\", textInputRow(inputId=\"node_color\", \n          label=\"vertex color\", value = \"blue\", class=\"col-md-12\"))\n      )),\n      fluidRow(column(width=12,\n        div(class=\"col-md-6\",numericInputRow(inputId = \"edge_arrow_size\",\n          \"Arrow size\", min = 0,  value = 0, step = .1,class=\"col-md-12\")),\n        div(class=\"col-md-6\",numericInputRow(inputId = \"edge_size\", \n          \"Edge size\", min = 0,  value = 0.25, step = .1,class=\"col-md-12\"))\n      ))\n    ),\n    wellPanel(\n      h5(\"Dimension and Download\"),\n      fluidRow(column(width=12,\n        div(class=\"col-md-6\",numericInputRow(\"net_width\", \"width\",\n          value=10, min=5, step=1, max = 100, class=\"col-md-12\")),\n        div(class=\"col-md-6\",numericInputRow(\"net_height\", \"height\",\n          value=7, min=3, step=1, max = 100, class=\"col-md-12\"))\n      )),\n      fluidRow(column(width=12,\n        div(class = 'col-md-6',selectInput('network_format', \"NetFormat\",\n          choices = graphic_formats, selected = \"pdf\")),\n        div(class = 'col-md-6',div(style=\"display:inline-block\",tags$label(\"Network\"),\n          downloadButton('download_net', 'Network'))\n        )\n      )),\n      fluidRow(column(width = 12,\n        div(class = 'col-md-6', downloadButton('downloadEdgeList', 'Edge list')),\n        div(class = 'col-md-6',downloadButton('download_seedset', 'Seed set'))\n      ))\n    )\n  ),\n  column(width = 9,\n      tabsetPanel( id = \"metabolicnet\",\n        #Network\n        tabPanel(\"Network\",\n          list(actionButton(\"draw_network\", \"Draw Network\"),\n            h5('Visualization of the selected seed set metabolic network, \n              be patient.'),\n            uiOutput('plot_net2'),\n            htmlOutput(\"seednet_description\"),\n            htmlOutput(\"seednode_length\"),\n            htmlOutput(\"seededge_length\")\n          )),#height = \"100%\"\n        \n        #edge 3list\n        tabPanel(\"Edge List\", list(\n          ##actionButton(\"show_connection\", \"Edge List\"),\n          shiny::dataTableOutput(\"network_edgelist\")\n          ##tableOutput(\"network_edgelist\")\n        )),\n        tabPanel(\"Seed Set\", list(\n          shiny::dataTableOutput(\"net_seeds_confidence\")\n          ##uiOutput(\"plot_net2\"),\n        \n      ))\n   )\n  )\n)\n\n\n# interaction page ----------------------------------------------------------\n\ninteractionpage = fluidPage(\n  column(width = 3, \n    wellPanel(\n      img(src = \"images/logo.png\"),\n      tags$head(tags$style(\n        type=\"text/css\",\n        \"img {max-width: 100%; width: 100%; height: auto}\"\n      ))\n    ),\n    wellPanel(\n      h5('Download interactions'),\n      fluidRow(column(width = 12,\n        helpText('Competition'),\n        div( class = 'col-md-6', \n          downloadButton('download_competition', 'Index')\n        ),\n        div(class = 'col-md-6',\n          downloadButton('download_competition_p', 'pvalue')\n        )\n      )),\n      helpText('Complementarity'),\n      fluidRow(column(width = 12,\n        div( class = 'col-md-6', \n          downloadButton('download_complementarity', 'Index')\n        ),\n        div(class = 'col-md-6',\n          downloadButton('download_complementarity_p', 'pvalue')\n        )\n      ))\n    ),\n    wellPanel(\n      helpText(HTML(\"<b>VERSION CONTROL</b>\")),\n      HTML('Version 0.1.1'),\n      HTML('<br>'),\n      HTML('Updated on 21-Mar-2016'),\n      HTML('<br>'),\n      HTML('<a href=\"https://github.com/yiluheihei/shiny-RevEcoR\" \n        target=\"_blank\">Code on GitHub</a>')\n      ),\n    wellPanel(\n      tags$p(\"Yang Cao\"),\n      tags$p(\"Beijing Institute of Radiation Medicine\"),\n      tags$p(\"Department of Biotechnology\"),\n      tags$p(\"Email:\", tags$a(href=\"mailto:yiluheihei@gmail.com\",\n        \"yiluheihei@gmail.com\"))\n    ),\n    wellPanel(\n      helpText(HTML(\"<b>OTHER Links</b>\")),\n      HTML('<a href=\"https://github.com/yiluheihei/RevEcoR\" target=\"_blank\"\n        >RevEcoR Package</a>,'),\n      HTML('<a href=\"https://github.com/yiluheihei\" \n        target=\"_blank\">Github Page</a>.')\n    )\n  ),\n  column(width = 9,\n    tabsetPanel( id = \"cooperationIndex\",\n      tabPanel(\"Competition index\",\n        list(actionButton(\"compute_interaction\", \"Compute interactions\"),\n          h5('Calculation of species interactions is the most time-consuming module\n            of shiny-RevEcoR, which may take minutes, hours and even several days\n            according to the number of species, please keep patient.'),\n          htmlOutput('competition_message'),\n          HTML('<br/>'),\n          shiny::dataTableOutput('competition_index'),\n          htmlOutput('competition_p_message'),\n          HTML('<br/>'),\n          shiny::dataTableOutput('competition_index_p')\n        )\n      ),\n      tabPanel(\"complementairty index\",\n        list(\n          htmlOutput('complementarity_message'),\n          HTML('<br/>'),\n          shiny::dataTableOutput('complementarity_index'),\n          htmlOutput('complementarity_p_message'),\n          HTML('<br/>'),\n          shiny::dataTableOutput('complementarity_index_p')\n        )\n      )\n    )\n  )\n)\n\n\nshinyUI(navbarPage(theme = shinytheme(\"flatly\"),\"shiny-RevEcoR\",\n  tabPanel(\"Introduction\", intropage),\n  tabPanel(\"Data\", datapage),\n  tabPanel(\"Metabolic Network and Seed set\", netpage),\n  tabPanel(\"Species Interactions\",interactionpage),\n  navbarMenu(\"Help\",\n    tabPanel(\"Getting started\", helppage('docs/start.md')),\n    tabPanel(\"Data input\", helppage('docs/inputdata.md')),\n    tabPanel(\"Metabolic network and Seed set\", \n      helppage(\"docs/net_seed.md\")),\n    tabPanel(\"Species interactions\", helppage(\"docs/interactions.md\")),\n    tabPanel(\"FAQ\",helppage(\"docs/FAQ.md\")),\n    tabPanel(\"Video\",helppage(\"docs/video.md\"))\n  ),\n  collapsible = TRUE\n))\n\nsessionInfo()",
    "created" : 1459348926259.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2435419440",
    "id" : "34B2FB5E",
    "lastKnownWriteTime" : 1459345262,
    "path" : "~/Desktop/work/Shiny-RevEcoR/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}